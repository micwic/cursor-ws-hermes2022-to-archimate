---
alwaysApply: true
---

# markdown-formatting-standards.mdc : Standards de formatage Markdown √† appliquer aux r√®gles (r√®gles de gouvernance et sp√©cifications)
> Cr√©√© le : 2025-07-03
> Derni√®re mise √† jour : 2025-07-05 

## Objectif de la R√®gle

### Probl√®me R√©solu

Erreurs markdownlint (MD022, MD032, MD041, etc.) caus√©es par formatage markdown non conforme aux standards

### Comportement Attendu

L'IA applique un formatage markdown conforme aux standards markdownlint √† toutes les r√®gles de gouvernance et √† toutes les sp√©cifications

# Contexte d'application et g√©n√©ralit√©s

- R√®gles de gouvernance
- Sp√©cifications
- Documentation utilisateur

## R√®gles √† appliquer

### Formatage √† respecter

#### R√®gles obligatoires √† appliquer

- **Espaces autour titres** : Ligne vide avant ET apr√®s chaque titre (MD022)
- **Espaces autour listes** : Ligne vide avant ET apr√®s chaque liste (MD032)
- **Indentation coh√©rente** : 2 espaces pour listes imbriqu√©es (MD007)
- **Longueur lignes** : Maximum 80 caract√®res par ligne (MD013)
- **Espace en fin de ligne** : Pas d'espace en fin de ligne (MD009)
- **Listes coh√©rentes** : Espace apr√®s tirets/ast√©risques (MD006)
- **Liens valides** : URLs valides et accessibles (MD011)

##### Comportements interdits/proscrits/√† √©viter

- **Titres sans espace** : Titres coll√©s au contenu pr√©c√©dent/suivant
- **Listes sans espace** : Listes coll√©es au contenu pr√©c√©dent/suivant
- **Listes mal format√©es** : Espace manquant apr√®s marqueurs liste
- **Lignes trop longues** : D√©passement 80 caract√®res
- **Indentation incoh√©rente** : M√©lange espaces/tabulations


## Instructions pour l'IA

### √Ä Faire Syst√©matiquement

1. V√©rifier espacement autour titres (ligne vide avant/apr√®s)
2. V√©rifier espacement autour listes (ligne vide avant/apr√®s)
3. Respecter limite 80 caract√®res par ligne
4. Utiliser indentation coh√©rente (2 espaces)
5. **APPLIQUER IMM√âDIATEMENT** : Formater selon r√®gles lors ajout contenu
6. Valider formatage avant commit
7. Pr√©server en-t√™te YAML (quand pr√©sent) de toute modification
8. Distinguer r√®gles Always Apply (en-t√™te YAML) vs Manual Apply (pas d'en-t√™te)

### √Ä √âviter Absolument

1. Titres sans espacement appropri√©
2. Listes sans espacement appropri√©
3. Lignes d√©passant 80 caract√®res
4. Indentation incoh√©rente
5. Listes mal format√©es
6. **ERREUR CRITIQUE** : Ajouter contenu sans appliquer r√®gles formatage
7. Modifier l'en-t√™te YAML lors du formattage
8. Supprimer l'en-t√™te YAML des r√®gles Always Apply

### Validation

- Titres entour√©s lignes vides (MD022)
- Listes entour√©es lignes vides (MD032)
- Lignes ‚â§ 80 caract√®res
- Indentation 2 espaces coh√©rente
- Listes correctement format√©es
- En-t√™te YAML pr√©serv√© (r√®gles Always Apply)
- Distinction claire Always Apply vs Manual Apply

## Exemples

### ‚úÖ Correct

```markdown
## Titre de Section

Contenu avec espacement appropri√©.

### Sous-section

Texte avant liste avec ligne vide.

- Liste correctement format√©e
  - Sous-√©l√©ment indent√©
- Autre √©l√©ment

Texte apr√®s liste avec ligne vide.
```

### ‚ùå Incorrect

```markdown
## Titre sans espace
Contenu coll√© au titre
### Sous-titre sans espace
Texte coll√© √† la liste
- Liste mal format√©e
  - Sous-√©l√©ment mal indent√©
- Autre √©l√©ment
Texte coll√© apr√®s liste
```

### üö® Erreur R√©elle Session 2025-07-05

**Violation** : Ajout section Jest-Cucumber sans appliquer r√®gle MD032

```markdown

### Principe Jest-Cucumber

**Finalit√©** : Expressivit√© Gherkin + Infrastructure Jest existante
- Sc√©narios m√©tier en syntaxe Gherkin (fichiers `.feature`)  # ‚ùå Pas de ligne vide avant
- Impl√©mentation avec Jest (mocks, assertions, infrastructure)
- Ex√©cution uniforme `yarn test` (pas de runner s√©par√©)

### Avantages Jest-Cucumber

- ‚úÖ **Expressivit√© m√©tier** : Sc√©narios compr√©hensibles par tous  # ‚ùå Pas de ligne vide avant/apr√®s
```

**Le√ßon** : TOUJOURS appliquer imm√©diatement les r√®gles lors de l'ajout de contenu

## Contexte Projet Sp√©cifique

### Application dans le projet

Tous les fichiers .mdc (r√®gles Cursor + sp√©cifications) doivent respecter ces standards

### Int√©gration avec Autres R√®gles

- Compl√®te `yaml-header-integrity.mdc` pour qualit√© globale
- Assure coh√©rence avec `specifications-template.mdc`

## Maintenance

### Revue √† effectuer

- Validation formatage avant modification
- Correction erreurs markdownlint d√©tect√©es

### √âvolution √† pr√©voir

Extension standards si nouveaux besoins markdownlint
