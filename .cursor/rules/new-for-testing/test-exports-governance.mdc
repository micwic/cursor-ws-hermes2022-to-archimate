---
description: Gouvernance des exports Javascript r√©serv√©s aux tests
alwaysApply: true
---

# test-exports-governance.mdc : Gouvernance des exports Javascript r√©serv√©s aux tests

> Cr√©√© le : 2025-10-25
> Derni√®re mise √† jour : 2025-10-25

## Objectifs de la r√®gle

- Distinguer clairement les exports de production des exports r√©serv√©s aux tests
- √âviter l'utilisation accidentelle de fonctions internes en production
- Faciliter le mocking dans les tests BDD comportementaux

## Probl√®mes r√©solus/√† r√©soudre

- Confusion entre API publique et API de test
- Risque d'utilisation de fonctions internes en production
- Difficult√© √† identifier les exports mockables dans les tests

## Comportement g√©n√©ral attendu

- L'IA et l'utilisateur pr√©fixent syst√©matiquement avec `_testOnly_` les exports r√©serv√©s aux tests
- Les tests importent et utilisent uniquement les exports pr√©fix√©s `_testOnly_`
- Aucun code de production n'utilise les exports `_testOnly_`

## Contexte d'application et g√©n√©ralit√©s

- S'applique √† tous les modules JavaScript/TypeScript exportant des fonctions pour les tests
- Convention reconnue dans l'√©cosyst√®me JavaScript pour indiquer usage interne
- Compatible avec les frameworks de test (Jest, Mocha, etc.)

## R√®gles √† appliquer

### Convention de nommage des exports de test

#### R√®gles obligatoires √† appliquer

- **PR√âFIXE _testOnly_** : Tous les exports r√©serv√©s aux tests doivent √™tre pr√©fix√©s avec `_testOnly_`
- **COMMENTAIRE** : Ajouter un commentaire `// Exports pour tests uniquement` au-dessus de la section des exports de test
- **S√âPARATION** : S√©parer visuellement les exports de production (s'ils existent) des exports de test dans module.exports
- **DOCUMENTATION** : Documenter dans les sp√©cifications que ces exports sont r√©serv√©s aux tests uniquement selon @test-exports-governance

#### Comportements interdits/proscrits/√† √©viter

- **Utilisation en production** : Ne jamais utiliser les exports `_testOnly_` dans du code de production
- **Exports mixtes** : √âviter de m√©langer exports publics et exports de test sans distinction claire
- **Nommage inconsistant** : Ne pas utiliser d'autres pr√©fixes comme `__test`, `_internal`, etc.

#### Validation

- V√©rifier que tous les exports utilis√©s dans les tests sont pr√©fix√©s `_testOnly_`
- V√©rifier qu'aucun code de production n'importe les exports `_testOnly_`
- V√©rifier la pr√©sence du commentaire explicatif

#### Exemples

##### ‚úÖ Correct

```javascript
// nuextract-client.js
// Exports pour tests uniquement
module.exports = {
  _testOnly_loadGlobalConfig: loadGlobalConfig,
  _testOnly_loadApiKey: loadApiKey,
  _testOnly_generateTemplate: generateTemplate,
  _testOnly_inferTemplateFromDescriptionAsync: inferTemplateFromDescriptionAsync
};
```

```typescript
// test.steps.ts
const { _testOnly_loadApiKey } = require('src/nuextract-client.js');
jest.spyOn(nuextractClient, '_testOnly_loadApiKey').mockResolvedValue('fake-key');
```

##### ‚ùå Incorrect

```javascript
// ‚ùå Sans pr√©fixe
module.exports = {
  loadGlobalConfig,
  loadApiKey
};

// ‚ùå Pr√©fixe inconsistant
module.exports = {
  __test_loadApiKey,
  _internal_generateTemplate
};
```

## √âtat d'impl√©mentation

‚úÖ [R√®gle d√©finie - 2025-10-25]
üöß [Application en cours sur nuextract-client.js et tests]
# test-exports-governance.mdc : Gouvernance des exports r√©serv√©s aux tests
